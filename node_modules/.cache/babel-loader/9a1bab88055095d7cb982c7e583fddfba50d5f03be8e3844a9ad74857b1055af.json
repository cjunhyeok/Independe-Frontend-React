{"ast":null,"code":"var _jsxFileName = \"/Users/gani/Desktop/project/git/Independe-Frontend-React/src/screen/main.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useState } from \"react\";\nimport BodyContainer from \"../components/BodyContainer\";\nimport { videosGet } from \"../util/api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [videosData, setVideosData] = useState([]);\n  const [mainVideoArr, setMainVideoArr] = useState([]);\n  useLayoutEffect(() => {\n    videosGet().then(res => {\n      setVideosData(res.data);\n    }).catch(error => {\n      console.error(\"videosGet error:\", error);\n    });\n  }, []);\n  useLayoutEffect(() => {\n    const sliceVideosData = videosData;\n    const sliceResult = sliceVideosData.slice(0, 3);\n    setMainVideoArr(sliceResult);\n  }, [videosData]);\n  return /*#__PURE__*/_jsxDEV(BodyContainer, {\n    className: \"pt-[90px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"gdgdgddg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-[30px] pb-[40px]\",\n      children: mainVideoArr.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"iframeContainer iframe16To9\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            title: `main_video_${index}`,\n            src: item.videoUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center px-[10px]\",\n          style: {\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            maxWidth: \"calc(100vw - 8vw)\"\n          },\n          children: item.videoTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"e4/V12WDd3z5oKaHcA93u4hQVkA=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useLayoutEffect","useState","BodyContainer","videosGet","jsxDEV","_jsxDEV","MainPage","_s","videosData","setVideosData","mainVideoArr","setMainVideoArr","then","res","data","catch","error","console","sliceVideosData","sliceResult","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","title","src","videoUrl","style","overflow","textOverflow","whiteSpace","maxWidth","videoTitle","_c","$RefreshReg$"],"sources":["/Users/gani/Desktop/project/git/Independe-Frontend-React/src/screen/main.js"],"sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\nimport BodyContainer from \"../components/BodyContainer\";\nimport { videosGet } from \"../util/api.js\";\n\nconst MainPage = () => {\n    const [videosData, setVideosData] = useState([]);\n    const [mainVideoArr, setMainVideoArr] = useState([]);\n\n    useLayoutEffect(() => {\n        videosGet()\n            .then((res) => {\n                setVideosData(res.data);\n            })\n            .catch((error) => {\n                console.error(\"videosGet error:\", error);\n            });\n    }, []);\n\n    useLayoutEffect(() => {\n        const sliceVideosData = videosData;\n        const sliceResult = sliceVideosData.slice(0, 3);\n        setMainVideoArr(sliceResult);\n    }, [videosData]);\n\n    return (\n        <BodyContainer className=\"pt-[90px]\">\n            {/* <div>\n                <div className=\"flex flex-col md:flex-row items-center\">\n                    <span className=\"font-medium font-16 md:font-22 color-green-5e mr-[10px]\">\n                        Daily TIP.\n                    </span>\n                    <span className=\"font-medium md:font-16\">\n                        다가오는 장마철 천연 정화석을 구비하여 습기를 제거해보세요\n                    </span>\n                </div>\n                <div className=\"h-[500px] pt-[20px]\">TODO게시판들 자리</div>\n                <FlexBox justify=\"space-between\" align=\"center\" className=\"pb-[12px]\">\n                    <div className=\"md:font-22 color-green-5e font-medium\">자취 정보 영상</div>\n                    <button className=\"font-medium\">더 많은 영상보기</button>\n                </FlexBox>\n            </div> */}\n            <div>gdgdgddg</div>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-[30px] pb-[40px]\">\n                {mainVideoArr.map((item, index) => (\n                    <div key={index}>\n                        <div className=\"iframeContainer iframe16To9\" key={index}>\n                            <iframe title={`main_video_${index}`} src={item.videoUrl}></iframe>\n                        </div>\n                        <div\n                            className=\"text-center px-[10px]\"\n                            style={{\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                                whiteSpace: \"nowrap\",\n                                maxWidth: \"calc(100vw - 8vw)\",\n                            }}\n                        >\n                            {item.videoTitle}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </BodyContainer>\n    );\n};\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpDD,eAAe,CAAC,MAAM;IAClBG,SAAS,CAAC,CAAC,CACNS,IAAI,CAAEC,GAAG,IAAK;MACXJ,aAAa,CAACI,GAAG,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAENhB,eAAe,CAAC,MAAM;IAClB,MAAMkB,eAAe,GAAGV,UAAU;IAClC,MAAMW,WAAW,GAAGD,eAAe,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/CT,eAAe,CAACQ,WAAW,CAAC;EAChC,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAEhB,oBACIH,OAAA,CAACH,aAAa;IAACmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAgBhCjB,OAAA;MAAAiB,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBrB,OAAA;MAAKgB,SAAS,EAAC,kEAAkE;MAAAC,QAAA,EAC5EZ,YAAY,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BxB,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAKgB,SAAS,EAAC,6BAA6B;UAAAC,QAAA,eACxCjB,OAAA;YAAQyB,KAAK,EAAG,cAAaD,KAAM,EAAE;YAACE,GAAG,EAAEH,IAAI,CAACI;UAAS;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC,GADrBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElD,CAAC,eACNrB,OAAA;UACIgB,SAAS,EAAC,uBAAuB;UACjCY,KAAK,EAAE;YACHC,QAAQ,EAAE,QAAQ;YAClBC,YAAY,EAAE,UAAU;YACxBC,UAAU,EAAE,QAAQ;YACpBC,QAAQ,EAAE;UACd,CAAE;UAAAf,QAAA,EAEDM,IAAI,CAACU;QAAU;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA,GAdAG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAExB,CAAC;AAACnB,EAAA,CA5DID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA8Dd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}