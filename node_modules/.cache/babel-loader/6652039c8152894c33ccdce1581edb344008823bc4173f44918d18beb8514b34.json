{"ast":null,"code":"var _jsxFileName = \"/Users/gani/Desktop/project/Independe-Frontend-React/src/components/Join.js\",\n  _s = $RefreshSig$();\nimport { post } from \"axios\"; // axios를 사용하여 POST 요청 보내기\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Join = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // 비밀번호 해싱 (여기서는 bcryptjs를 사용하여 해싱)\n      const hashedPassword = await bcrypt.hash(password, 10);\n\n      // 서버로 전송할 데이터\n      const data = {\n        username: username,\n        password: hashedPassword\n      };\n\n      // 서버에 POST 요청 보내기\n      const response = await post(\"/api/register\", data);\n      console.log(response.data); // 서버로부터의 응답 확인\n    } catch (error) {\n      console.error(\"Error registering user:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Join, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Join;\nexport default Join;\nvar _c;\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"names":["post","React","useState","jsxDEV","_jsxDEV","Join","_s","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","hashedPassword","bcrypt","hash","data","response","console","log","error","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gani/Desktop/project/Independe-Frontend-React/src/components/Join.js"],"sourcesContent":["import { post } from \"axios\"; // axios를 사용하여 POST 요청 보내기\nimport React, { useState } from \"react\";\n\nconst Join = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            // 비밀번호 해싱 (여기서는 bcryptjs를 사용하여 해싱)\n            const hashedPassword = await bcrypt.hash(password, 10);\n\n            // 서버로 전송할 데이터\n            const data = {\n                username: username,\n                password: hashedPassword,\n            };\n\n            // 서버에 POST 요청 보내기\n            const response = await post(\"/api/register\", data);\n            console.log(response.data); // 서버로부터의 응답 확인\n        } catch (error) {\n            console.error(\"Error registering user:\", error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <button type=\"submit\">Register</button>\n        </form>\n    );\n};\n\nexport default Join;\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,OAAO,CAAC,CAAC;AAC9B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA;MACA,MAAMC,cAAc,GAAG,MAAMC,MAAM,CAACC,IAAI,CAACP,QAAQ,EAAE,EAAE,CAAC;;MAEtD;MACA,MAAMQ,IAAI,GAAG;QACTV,QAAQ,EAAEA,QAAQ;QAClBE,QAAQ,EAAEK;MACd,CAAC;;MAED;MACA,MAAMI,QAAQ,GAAG,MAAMlB,IAAI,CAAC,eAAe,EAAEiB,IAAI,CAAC;MAClDE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAMkB,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBACzBnB,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAGf,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF5B,OAAA;MACIoB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAGf,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF5B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEf,CAAC;AAAC1B,EAAA,CA1CID,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}